//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

#ifndef __HNOCS_PREDICTOR_H_
#define __HNOCS_PREDICTOR_H_

#include <omnetpp.h>
#include <map>
#include "PredictorIfc.h"
#include "SessionMeta.h"
#include "InPortSync.h"
#include "XYOPCalc.h"
#include "SchedSync.h"
#include "FLUVCCalc.h"

using std::map;

class Predictor : public cSimpleModule
{
    typedef map<SessionMeta*, PredictionInterval> PredictionTable;

    PredictionTable     m_predictionTable;
    PredictorIfc        *m_predictor;

    InPortSync  *m_inPort;
    XYOPCalc    *m_opCalc;
    SchedSync   *m_sched;
    FLUVCCalc   *m_vcCalc;

    bool CheckIfHit(SessionMeta *meta);

    void HitFlow(NoCFlitMsg* msg, SessionMeta *meta);

  protected:
    virtual void initialize();
    virtual void handleMessage(cMessage *msg);

public:
    bool Hit(NoCFlitMsg* msg);

};

#endif
