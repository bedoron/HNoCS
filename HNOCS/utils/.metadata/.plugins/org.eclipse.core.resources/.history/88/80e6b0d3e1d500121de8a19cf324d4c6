from AnalysisThread import AnalyzeGraph
from sys import stdin
# JSON DB Organization
# Typical line in router should look like:
# [ router1, router2, ...... ]
# where each is 
# [ .... , 
#    {    "router_id": 0, "session_id": 2511, "session_type": "L2_DRAM", "response_ts": 0.000449854, 
#    "request_ts": 0.000449374, "request_out_port": 2, "response_out_port": 2 }, ...... ]


class AnalyzePorts(AnalyzeGraph):
    
    def analyze(self, entry_name):
        router_id = self.parser.toJsonEntry(entry_name)
        trans_type = entry_name[1]
        router = self.json[router_id]
        
        print "Please enter source dest pair"
        ln = stdin.readline()
        
        parts = ln.split(" ")
        source = int(parts[0])
        dest = int(parts[1])
        
        entry = { "x":[], "y": []}
        for session in router:
            store = False
            if session["session_type"]!=trans_type:
                continue
            if(source == 4 or dest == 4): #Router traversal is noted by x,x pairs
                if(session["request_out_port"]==session["response_out_port"]):
                    non_router = source
                    if non_router == 4:
                        non_router = dest
                    if(session["request_out_port"] == non_router):
                        store = True
            else:
                if(session["request_out_port"]==source and session["response_out_port"]==dest):
                    store = True
                    
            if store:
                x = session["response_ts"]
                y = x - session["request_ts"]
                entry["x"].append(x)
                entry["y"].append(y)
        
        return AnalyzeGraph.average_analysis(self, entry, entry_name[0], entry_name[1])
    
        
        
        #return AnalyzeGraph.analyze(self, db, entry_name)
        