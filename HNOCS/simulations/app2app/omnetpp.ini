[General]
sim-time-limit = 1ms
**.flitSize = 4B

[Config app2app]
network = App2app
**.appType = "hnocs.cores.EchoApp"
**.App1.appId = 1
**.App2.appId = 2

**.App*.VC = 0     # the VC to be used for packets
**.App*.dstId = 0     #  
**.App*.dstAppId = 0  # the application destination    
**.App*.pktLen = intuniform(8,16)  # packet length in FLITs
**.App*.msgLen = intuniform(1,2)   # how many packets will be sent to same dst 
**.App*.msgDelay = exponential(1us)  # generation delay between messages
**.App*.statStartTime = 0s         # start time for recording statistics

[Config app2noc2app]
network = Apps2NoC2Apps
**.appType = "hnocs.cores.EchoApp"
**.numVCs = 2
**.app[0].VC = 0     # the VC to be used for packets
**.app[1].VC = 1
**.AppNI1.app*.dstId = 1
**.AppNI2.app*.dstId = 0
**.app*.pktLen = intuniform(8,16)  # packet length in FLITs
**.app*.msgLen = intuniform(1,3)   # how many packets will be sent to same dst 
**.app*.msgDelay = exponential(1us)  # generation delay between messages
**.statStartTime = 0s         # start time for recording statistics
**.arbitration_type = 0       # winner takes all

[Config echo-center-2x2]
network = hnocs.topologies.CentMesh
**.columns = 2
**.rows = 2
**.routerType = "hnocs.routers.flat.CentSchedRouter"
**.coreType = "hnocs.cores.CAppNI"
**.centralType = "hnocs.cores.central.ParallelCentralSched"
**.appType = "hnocs.cores.EchoApp"
**.numVCs = 2
**.app[0].VC = 0     # the VC to be used for packets
**.app[1].VC = 1
**.numApps = 2
**.app*.dstId = (id + intuniform(1,3)) % 4
**.app*.pktLen = 8  # packet length in FLITs
**.app*.msgLen = 2   # how many packets will be sent to same dst 
**.app*.msgDelay = exponential(10us)  # generation delay between messages
**.statStartTime = 0s         # start time for recording statistics
**.arbitration_type = 0       # winner takes all
**.tClk = 2ns
**.ackEverything = false
**.schedClks = 6

[Config echo-bl-2x2]
network = hnocs.topologies.Mesh
**.columns = 2
**.rows = 2
**.routerType = "hnocs.routers.hier.Router"
**.portType = "hnocs.routers.hier.Port"
**.inPortType = "hnocs.routers.hier.inPort.InPortSync"
**.OPCalcType = "hnocs.routers.hier.opCalc.static.XYOPCalc"
**.VCCalcType = "hnocs.routers.hier.vcCalc.free.FLUVCCalc"
**.schedType = "hnocs.routers.hier.sched.wormhole.SchedSync"
**.coreType = "hnocs.cores.AppNI"
**.appType = "hnocs.cores.EchoApp"
**.numVCs = 2
**.app[0].VC = 0     # the VC to be used for packets
**.app[1].VC = 1
**.numApps = 2
**.app*.dstId = (id + intuniform(1,3)) % 4
**.app*.pktLen = 8  # packet length in FLITs
**.app*.msgLen = 2   # how many packets will be sent to same dst 
**.app*.msgDelay = exponential(10us)  # generation delay between messages
**.statStartTime = 0s         # start time for recording statistics
**.arbitration_type = 0       # winner takes all
**.tClk = 2ns
**.inPort.flitsPerVC = 5
**.inPort.collectPerHopWait = false
**.sched.freeRunningClk = false
#**.sched.speculativeGntOnCompltedReq = false
#**.source.isSynchronous = false