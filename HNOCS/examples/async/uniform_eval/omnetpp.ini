[General]
record-eventlog = false
**.vector-recording=false
network = hnocs.topologies.Mesh

#repeat
repeat=10

# Select Component Types
**.routerType = "hnocs.routers.hier.idealRouter"
**.coreType   = "hnocs.cores.NI"
**.sourceType = "hnocs.cores.sources.PktFifoSrc"
**.sinkType   = "hnocs.cores.sinks.InfiniteBWMultiVCSink"
**.portType   = "hnocs.routers.hier.Port"
**.inPortType = "hnocs.routers.hier.inPort.InPortAsync"
**.OPCalcType = "hnocs.routers.hier.opCalc.static.XYOPCalc"
**.VCCalcType = "hnocs.routers.hier.vcCalc.free.FLUVCCalc"
**.schedType  = "hnocs.routers.hier.sched.wormhole.SchedAsync"

sim-time-limit = 1ms

# Global Parameters
**.numVCs = 2
**.flitSize = 4B
**.rows = 4
**.columns = 4
**.statStartTime = 1us # when to start 

# Source Parameters
**.source.pktVC = 0  # the VC injecting the packet on from the NI 
**.source.msgLen = 2 # packets per message
**.source.pktLen = 8 # in flits
**.source.isSynchronous = false # inject flits without any synchronization to clock
**.source.isTrace = false  # do not inject based on trace file
**.source.fileName = ""    # no trace file given
**.source.flitArrivalDelay = exponential(${D=3,3.5,3.75,4,4.25,4.5,5,6,7,8}ns)
**.source.maxQueuedPkts = 256
**.source.dstId = (id + intuniform(1, 15)) % 16 # Uniform random thar prevent self dst 

# Sink Parameters
# all params are global 

# In Port Parameters
**.inPort.collectPerHopWait = false # Controls per hop wait time collection
**.inPort.flitsPerVC = 5
**.inPort.sendReqInAdvance = true

# OPCalc
# No parameters

# VCCalc
# No parameters

# Sched Parameters
**.sched.arbitration_type = 0 # if 1 allow sending Gnt on next Req while waiting for complted Req Acks

